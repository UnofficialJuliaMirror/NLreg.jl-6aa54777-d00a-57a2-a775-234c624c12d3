# Examples of nonlinear regression models from NIST

The U.S. National Institute of Standards and Technology (NIST) produced a set of reference examples for nonlinear regression routines.  These data sets and models are documented in the `NISTnls` package for [`R`](https://cloud.R-project.org).

```julia
using CSV, DataFrames, Gadfly, NLreg
```

```julia
datadir = joinpath(dirname(pathof(NLreg)), "..", "data");
```

### Bennett5

```julia
b5 = CSV.read(joinpath(datadir, "Bennett5.csv"))
```

```julia
plot(b5, x=:x, y=:y)
```

```julia
b5m = fit(NLregModel, b5, :y, (p,data)->(p.b1*(p.b2+data.x)^(-1/p.b3)),
  (b1=-2000., b2=50., b3=0.8))
```

### Chwirut1

```julia
cw1 = CSV.read(joinpath(datadir, "Chwirut1.csv"))
plot(cw1, x = :y, y = :y)
```

```julia
cw1m = fit(NLregModel, cw1, :y, (φ,data) -> exp(-φ.b1*data.x)/(φ.b2+φ.b3*data.x),
  (b1=0.1, b2 = 0.01, b3 = 0.01), verbose=true)
```

### Chwirut2

```julia
cw2 = CSV.read(joinpath(datadir, "Chwirut2.csv"))
plot(cw2, x = :x, y = :y)
```

```julia
cw2m = fit(NLregModel, cw2, :y, (φ,data)->exp(-φ.b1*data.x)/(φ.b2+φ.b3*data.x),
   (b1=0.15, b2 = 0.008, b3 = 0.01), verbose=true)
```

```julia
m1 = fit(NLregModel, cw2, :y, (x,data)->exp(-x.b1*data.x)/(x.b2 + x.b3*data.x),
    (b1 = 0.15, b2 = 0.008, b3 = 0.01))
```

### DanielWood

```julia
dw = CSV.read(joinpath(datadir, "DanielWood.csv"))
plot(dw, x=:x, y=:y)
```

```julia
dwm = fit(NLregModel, dw, :y, (p,d) -> p.b1*d.x^p.b2, (b1=0.7, b2=4.0))
```

```julia
MichaelisMenten(x, data) = x.Vm*data.conc/(x.K + data.conc)
```

```julia
Puromycin = CSV.read(joinpath(datadir, "Puromycin.csv"))
purtrt = first(groupby(Puromycin, :state))
plot(purtrt, x = :conc, y = :rate)
```

```julia
pm1 = fit(NLregModel, purtrt, :rate, MichaelisMenten, (Vm = 200., K = 0.05))
```

```julia
puruntrt = last(groupby(Puromycin, :state))
plot(puruntrt, x = :conc, y = :rate)
```

```julia
@time pm2 = fit(NLregModel, puruntrt, :rate, MichaelisMenten, (Vm = 200., K = 0.05))
```

```julia
fits = [fit(NLregModel, sfr, :rate, MichaelisMenten, (Vm = 200., K = 0.05)) for sfr in groupby(Puromycin, :state)]
```

```julia
const Theo = CSV.read(joinpath(datadir, "Theophylline.csv"))
```

```julia
function sdOral1C(φ, data)
    k  = exp(φ.lk)    # elimination rate constant from lk
    ka = exp(φ.lka)    # absorption rate constant from lka
    V  = exp(φ.lV)    # volume of distribution from lV
    t  = data.time
    (data.dose/V) * (ka/(ka - k)) * (exp(-k*t) - exp(-ka*t))
end
```

```julia
fit(NLregModel, first(groupby(Theo, :Subj)), :conc, sdOral1C, (lk=-2.5,lka=0.5,lV=-1.0), verbose=true)
```

```julia
for sdf in groupby(Theo, :Subj)
    println(sdf.Subj[1])
    try
        println(fit(NLregModel, sdf, :conc, sdOral1C, (lk=-2.5,lka=0.5,lV=-1.0)))
    catch
    end
end
```

```julia
Indometh = CSV.read(joinpath(datadir, "Indometh.csv"))
```

```julia
plot(Indometh, x = :time, y = :conc, xgroup=:subject, Geom.subplot_grid(Geom.point))
```

## Examples from Chapter 8 of Pinheiro and Bates (2000)

Import the data on Orange tree growth

```julia
Orange = CSV.read(joinpath(datadir, "../data/Orange.csv"), pool=true)
```

An initial fit of the logistic growth model grouping all the trees together is

```julia
logisgrowth(p,d) = @.(p[1]/(1+exp(-(d.age - p[2])/p[3])));
```

```julia
m1 = fit!(NLregModel(logisgrowth, Orange, (Asym=170.,xmid=800., scal=500.), :circumference))
```

Separate models for each tree are fit by

```julia
m2 = [fit!(NLregModel(logisgrowth, sdf, (Asym=192.7, xmid=728.7, scal=353.5), :circumference)) for sdf in groupby(Orange, :tree)]
```
